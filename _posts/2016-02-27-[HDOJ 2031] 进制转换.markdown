---
layout: post
title:  "[HDOJ 2031] 进制转换"
date:   2016-02-27 13:21:00 +0800
categories: HDOJ
---
### __问题描述__
> 输入一个十进制数N，将它转换成R进制数输出。

### __输入要求__
> 输入数据包含多个测试实例，每个测试实例包含两个整数N(32位整数)和R（2<=R<=16, R<>10）。

### __输出要求__
> 为每个测试实例输出转换后的数，每个输出占一行。如果R大于10，则对应的数字规则参考16进制（比如，10用A表示，等等）。

### __解题思路__
将给定的十进制数作为被除数，给定的进制数作为除数，除得的商为下一轮的被除数直到商为0为止，所得的余数序列的逆序即为转换后的数。当进制数大于10的时候对应的数字规则参考16进制，因此可定义一个转换数组{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}以使运算更方便。

### __代码__
	#include <stdio.h>

	int main()
	{
	    int m, n, count;
	    char ch[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}, result[101];
	    while(scanf("%d %d", &m, &n) != EOF)
	    {
	        count = 0;
	        if(m < 0)
	        {
	            m = -m;
	            printf("-");
	        }
	        while(m > 0)
	        {
	            result[++count] = ch[m % n];
	            m = m / n;
	        }
	        while(count)
	        {
	            printf("%c", result[count--]);
	        }
	        printf("\n");
	    }
	    return 0;
	}